apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: dc1-cluster
spec:
  kafka:
    version: 3.5.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: oauth
          clientId: kafka-broker 
          clientSecret:
            key: clientSecret
            secretName: kafka-broker-client-secret
          validIssuerUri: https://keycloak-rhsso.apps.cluster-ql8gl.dynamic.redhatworkshops.io/auth/realms/demo
          jwksEndpointUri: https://keycloak-rhsso.apps.cluster-ql8gl.dynamic.redhatworkshops.io/auth/realms/demo/protocol/openid-connect/certs
          userNameClaim: preferred_username
          enableOauthBearer: true
      - name: external
        port: 9094
        type: route
        tls: true
        authentication:
          type: oauth
          clientId: kafka-broker 
          clientSecret:
            key: clientSecret
            secretName: kafka-broker-client-secret
          validIssuerUri: https://keycloak-rhsso.apps.cluster-ql8gl.dynamic.redhatworkshops.io/auth/realms/demo
          jwksEndpointUri: https://keycloak-rhsso.apps.cluster-ql8gl.dynamic.redhatworkshops.io/auth/realms/demo/protocol/openid-connect/certs
          userNameClaim: preferred_username
          enableOauthBearer: true
    authorization:
      type: keycloak
      clientId: kafka
      tokenEndpointUri: https://keycloak-rhsso.apps.cluster-ql8gl.dynamic.redhatworkshops.io/auth/realms/kafka-authz/protocol/openid-connect/token
      delegateToKafkaAcls: false
      #superUsers:
      #- User:service-account-kafka
    logging:
      type: inline
      loggers:
        log4j.logger.io.strimzi: "DEBUG"
        log4j.logger.kafka: "DEBUG"
        log4j.logger.org.apache.kafka: "DEBUG"
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.5"
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 50Gi
        deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics-configmap
          key: kafka-metrics-config.yml
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: 50Gi
      deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics-configmap
          key: zookeeper-metrics-config.yml
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
  entityOperator:
    topicOperator: {}
    userOperator: {}
